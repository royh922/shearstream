include "input/test_cosmo.incl"
Adapt { min_level = -2; }

 Adapt {
     max_level = 0;
 }          
 Stopping { cycle = 200; }
 Method {
     gravity {
         solver = "mg";
     };
 }

Solver {
     list = [ "mg", "mg_pre", "mg_coarse", "mg_post" ];
     mg {
         coarse_level = -2;
         coarse_solve = "mg_coarse";
         iter_max = 5;
         max_level = 0;
         min_level = -2;
         monitor_iter = 1;
         post_smooth = "mg_post";
         pre_smooth = "mg_pre";
         res_tol = 0.1000000000000000;
         solve_type = "level";
         type = "mg0";
     };
     mg_coarse {
         iter_max = 100;
         monitor_iter = 1;
         res_tol = 0.1000000000000000;
         solve_type = "block";
         type = "cg";
     };
     mg_post {
         iter_max = 2;
         solve_type = "level";
         type = "jacobi";
     };
     mg_pre {
         iter_max = 2;
         solve_type = "level";
         type = "jacobi";
     };
 }

 Output {
     de   { dir = [ "Dir_COSMO_MG_%04d", "cycle" ]; }
     depa { dir = [ "Dir_COSMO_MG_%04d", "cycle" ]; }
     ax   { dir = [ "Dir_COSMO_MG_%04d", "cycle" ]; }
     ay   { dir = [ "Dir_COSMO_MG_%04d", "cycle" ]; }
     az   { dir = [ "Dir_COSMO_MG_%04d", "cycle" ]; }
     dark { dir = [ "Dir_COSMO_MG_%04d", "cycle" ]; }
     mesh { dir = [ "Dir_COSMO_MG_%04d", "cycle" ]; }
     po   { dir = [ "Dir_COSMO_MG_%04d", "cycle" ]; }
     hdf5 { dir = [ "Dir_COSMO_MG_%04d", "cycle" ]; }
     dep  { dir = [ "Dir_COSMO_MG_%04d", "cycle" ]; }
     check { dir = [ "Dir_COSMO_MG_%04d-checkpoint", "count" ]; }
  }
